{"abstract":[{"type":"text","text":"Learn how DropIn retrieves and manages nearby events using a geospatially optimized backend and a centralized in-app event store."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/me.dropinwith.DropIn\/documentation\/DropIn\/Fetching-Events"},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"DropIn delivers a dynamic, location-aware event feed powered by an efficient and scalable event fetching mechanism. This mechanism ensures users see relevant events—both nearby and timely—whether they are browsing the map or scrolling through their home feed."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"At the heart of this system is the "},{"type":"strong","inlineContent":[{"type":"codeVoice","code":"EventStore"}]},{"type":"text","text":", a centralized, observable manager responsible for retrieving events from the backend and maintaining an up-to-date local cache for UI components to consume."}]},{"level":2,"type":"heading","anchor":"How-Event-Fetching-Works","text":"How Event Fetching Works"},{"level":3,"type":"heading","anchor":"1-Centralized-Event-Management","text":"1. Centralized Event Management"},{"type":"paragraph","inlineContent":[{"text":"All events in the app are managed through an environment shared instance of ","type":"text"},{"code":"EventStore","type":"codeVoice"},{"text":". This class:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"Fetches events from the backend (Supabase)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Caches them locally in-memory"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Provides filtered subsets of events to views (e.g., joined events, nearby unjoined events)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Prunes expired events automatically"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"This centralization ensures a consistent and performant experience across all views, while keeping network traffic minimal.","type":"text"}]},{"anchor":"2-Efficient-Geo-Queries-with-PostGIS","type":"heading","level":3,"text":"2. Efficient Geo-Queries with PostGIS"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The backend is backed by PostgreSQL with "},{"identifier":"https:\/\/postgis.net\/","type":"reference","isActive":true},{"type":"text","text":" enabled for spatial data support. Each event in the "},{"type":"codeVoice","code":"events"},{"type":"text","text":" table stores its location as a "},{"type":"codeVoice","code":"geography"},{"type":"text","text":" type column, enabling highly optimized spatial queries."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To find nearby events, the frontend calls a "},{"type":"strong","inlineContent":[{"text":"remote procedure (RPC)","type":"text"}]},{"type":"text","text":" function exposed by Supabase. This function takes:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"strong","inlineContent":[{"type":"text","text":"center coordinate"}]},{"type":"text","text":" ("},{"type":"codeVoice","code":"latitude"},{"type":"text","text":", "},{"type":"codeVoice","code":"longitude"},{"type":"text","text":")"}]}]},{"content":[{"inlineContent":[{"text":"A ","type":"text"},{"type":"strong","inlineContent":[{"text":"search region","type":"text"}]},{"text":" (","type":"text"},{"type":"codeVoice","code":"latitudeDelta"},{"text":", ","type":"text"},{"type":"codeVoice","code":"longitudeDelta"},{"text":")","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Using spatial indexes on the location column, the RPC efficiently returns only events within the specified bounding box. This ensures low-latency queries, even with a large event dataset.","type":"text"}]},{"anchor":"3-View-Specific-Fetching-Behavior","type":"heading","level":3,"text":"3. View-Specific Fetching Behavior"},{"anchor":"Home-View-Feed","type":"heading","level":4,"text":"Home View (Feed)"},{"items":[{"content":[{"inlineContent":[{"text":"Initially fetches events around the user’s location using a small delta.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"As the user scrolls through the event list, the "},{"code":"EventStore","type":"codeVoice"},{"type":"text","text":" detects when more data is needed."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It then "},{"type":"strong","inlineContent":[{"type":"text","text":"increments the search delta"}]},{"type":"text","text":", effectively expanding the radius and fetching more events outward from the user’s location."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This creates an “infinite scroll” experience, while prioritizing nearby events first."}]},{"anchor":"Map-View","type":"heading","level":4,"text":"Map View"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Events are fetched based on the "},{"inlineContent":[{"type":"text","text":"currently visible map camera region"}],"type":"strong"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Every time the map moves significantly, a new query is made with the updated center and span values.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This ensures that the user always sees relevant, up-to-date event pins in their current view."}]}]}],"type":"unorderedList"},{"anchor":"4-Filtering-and-Deduplication","type":"heading","level":3,"text":"4. Filtering and Deduplication"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once events are fetched:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Already-joined events are excluded from the general nearby feed."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Expired events (whose ","type":"text"},{"code":"end","type":"codeVoice"},{"text":" time is in the past) are automatically pruned.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Duplicate fetches are avoided by comparing against previously fetched event IDs."}]}]}],"type":"unorderedList"},{"anchor":"Extensibility--Performance","type":"heading","level":2,"text":"Extensibility & Performance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The fetching system is designed with scalability in mind:"}]},{"items":[{"content":[{"inlineContent":[{"text":"The spatial RPC query can be easily adapted to support filters (e.g., categories, time ranges).","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Fetching logic is wrapped in async functions for seamless integration with Swift concurrency.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The search delta approach in the home view gracefully balances ","type":"text"},{"inlineContent":[{"text":"performance","type":"text"}],"type":"strong"},{"text":" and ","type":"text"},{"inlineContent":[{"type":"text","text":"relevance"}],"type":"strong"},{"text":".","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"Conclusion","type":"heading","level":2,"text":"Conclusion"},{"type":"paragraph","inlineContent":[{"text":"By combining a smart client-side store (","type":"text"},{"code":"EventStore","type":"codeVoice"},{"text":") with a geospatially optimized backend, DropIn ensures that users discover nearby events in a responsive and efficient way—whether they’re exploring spontaneously via the map or browsing curated lists in the home feed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This architecture lays a solid foundation for future growth, such as personalized sorting, trending events, or live filtering—all while keeping user experience fast and fluid.","type":"text"}]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/me.dropinwith.DropIn\/documentation\/DropIn"]]},"metadata":{"modules":[{"name":"DropIn"}],"role":"article","roleHeading":"Article","title":"Fetching Events"},"variants":[{"paths":["\/documentation\/dropin\/fetching-events"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://me.dropinwith.DropIn/documentation/DropIn":{"kind":"symbol","type":"topic","identifier":"doc:\/\/me.dropinwith.DropIn\/documentation\/DropIn","role":"collection","url":"\/documentation\/dropin","title":"DropIn","abstract":[{"type":"text","text":"Welcome to the official documentation for "},{"type":"strong","inlineContent":[{"text":"DropIn","type":"text"}]},{"type":"text","text":" — the spontaneous meetup app that brings people together in real time."}]},"https://postgis.net/":{"identifier":"https:\/\/postgis.net\/","type":"link","titleInlineContent":[{"text":"PostGIS","type":"text"}],"url":"https:\/\/postgis.net\/","title":"PostGIS"}}}