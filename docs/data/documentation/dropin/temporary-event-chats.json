{"identifier":{"url":"doc:\/\/me.dropinwith.DropIn\/documentation\/DropIn\/Temporary-Event-Chats","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/me.dropinwith.DropIn\/documentation\/DropIn"]]},"kind":"article","variants":[{"paths":["\/documentation\/dropin\/temporary-event-chats"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"An overview of how DropIn enables spontaneous, short-lived group messaging around live events using Supabase Realtime.","type":"text"}],"primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Every event in DropIn comes with its own ","type":"text"},{"inlineContent":[{"text":"temporary chat room","type":"text"}],"type":"strong"},{"text":"—a place where participants can communicate spontaneously during the course of the event. These chats are designed to be lightweight, ephemeral, and directly tied to the lifecycle of the event they belong to.","type":"text"}]},{"anchor":"Key-Characteristics","text":"Key Characteristics","type":"heading","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Scoped to Events","type":"text"}]},{"type":"text","text":": Each chat is uniquely linked to a DropIn event."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Temporary by Design"}]},{"text":": Chat rooms only exist while the event is active. Messages are not persisted beyond the event’s lifetime.","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Realtime Communication"}],"type":"strong"},{"type":"text","text":": Built using "},{"inlineContent":[{"type":"text","text":"Supabase Realtime"}],"type":"strong"},{"type":"text","text":", allowing instant delivery of new messages to all active clients."}],"type":"paragraph"}]}]},{"anchor":"Architecture","text":"Architecture","type":"heading","level":2},{"anchor":"1-Message-Model","text":"1. Message Model","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Messages are stored in a dedicated table and include fields such as:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"sender_id","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"chat_room_id"},{"type":"text","text":" (linked to the event)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"content","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"created_at","type":"codeVoice"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"MessageDTO"},{"type":"text","text":" (data transfer object) maps raw database records to the app’s internal "},{"type":"codeVoice","code":"Message"},{"type":"text","text":" model for UI rendering."}]},{"anchor":"2-Supabase-Realtime-Subscription","text":"2. Supabase Realtime Subscription","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each client subscribes to "},{"type":"strong","inlineContent":[{"type":"text","text":"insert events"}]},{"type":"text","text":" for the "},{"type":"codeVoice","code":"messages"},{"type":"text","text":" table using Supabase Realtime:"}]},{"code":["supabase.channel(\"messages:event_123\")","    .on(\"postgres_changes\", filter: .insert, table: \"messages\")","    .subscribe()"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Upon receiving new messages, the UI is updated immediately using a published "},{"code":"@Observable","type":"codeVoice"},{"text":" message list, ensuring low-latency group communication.","type":"text"}]},{"text":"3. Message Sending","level":3,"anchor":"3-Message-Sending","type":"heading"},{"inlineContent":[{"text":"When a user sends a message:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"It is written to the ","type":"text"},{"type":"codeVoice","code":"messages"},{"text":" table with appropriate metadata.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Supabase Realtime broadcasts the insert to all subscribed clients in the room."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The local ","type":"text"},{"type":"codeVoice","code":"ChatService"},{"text":" handles formatting and pushing the new message into the in-memory view model.","type":"text"}],"type":"paragraph"}]}]},{"anchor":"4-Lifecycle-Management","text":"4. Lifecycle Management","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"Chat channels are automatically:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Joined"}]},{"type":"text","text":" when a user enters the event view."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Unsubscribed"}],"type":"strong"},{"text":" when the view is dismissed or the event ends.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Future optimizations may include automatic cleanup or memory-safe purging for long-running sessions."}]}]}],"type":"unorderedList"},{"anchor":"Benefits","text":"Benefits","level":2,"type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Ephemeral by nature","type":"text"}],"type":"strong"},{"text":": Encourages lightweight communication around the moment.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Scalable"}]},{"type":"text","text":": Based on database triggers and WebSocket connections, with minimal backend logic."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Minimal setup","type":"text"}]},{"type":"text","text":": No external messaging service required—fully powered by Supabase."}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Future-Considerations","text":"Future Considerations","level":2,"type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement message expiration or automatic purging at the database level."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Allow ephemeral attachments (images, links) in messages."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Support rich text or emoji reactions with structured formatting."}]}]}],"type":"unorderedList"},{"anchor":"Conclusion","text":"Conclusion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Temporary event chats provide DropIn users with a spontaneous and real-time way to engage during events. By leveraging Supabase Realtime and lightweight design principles, the system is fast, flexible, and well-suited for short-lived group conversations."}]}],"kind":"content"}],"metadata":{"title":"Temporary Event Chats","roleHeading":"Article","role":"article","modules":[{"name":"DropIn"}]},"references":{"doc://me.dropinwith.DropIn/documentation/DropIn":{"kind":"symbol","type":"topic","identifier":"doc:\/\/me.dropinwith.DropIn\/documentation\/DropIn","role":"collection","url":"\/documentation\/dropin","title":"DropIn","abstract":[{"type":"text","text":"Welcome to the official documentation for "},{"type":"strong","inlineContent":[{"text":"DropIn","type":"text"}]},{"type":"text","text":" — the spontaneous meetup app that brings people together in real time."}]}}}